{
	"info": {
		"_postman_id": "fbb2a96f-6894-4c87-9286-068d4d78f15a",
		"name": "Blocktopus Public APIs",
		"description": "REST APIs in order to create a user in Blocktopus and submit his KYC review.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Create new individual user in Blocktopus",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-BLOCKTOPUS-AUTH",
						"type": "text",
						"value": "{{ORG-AUTH}}"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"organization_identifier\": \"0x1cbe8052cdd0530fcd169c1263448a66acbf9ace\",\n\t\"email_address\": \"john@eqitii.com\",\n\t\"first_name\": \"John\",\n\t\"middle_name\": \"\",\n\t\"last_name\": \"Smith\",\n\t\"birthday\": \"2000-01-13\",\n\t\"id_number\": \"ID 12345\",\n\t\"id_scan_image_url\": \"example_id_scan.jpg\",\n\t\"id_back_scan_image_url\": \"example_id_back_scan.jpg\",\n\t\"id_proof_image_url\": \"example_proof_scan.jpg\",\n\t\"proof_of_address_image_url\": \"test.jpg\",\n\t\"nationality\": \"US\",\n\t\"address\": \"Sesame Street 24 \",\n\t\"country\": \"US\"\n}"
				},
				"url": {
					"raw": "{{BLOCKTOPUS_ROOT}}/api/v1/organizations/{{ORGANIZATION}}/individual_subject",
					"host": [
						"{{BLOCKTOPUS_ROOT}}"
					],
					"path": [
						"api",
						"v1",
						"organizations",
						"{{ORGANIZATION}}",
						"individual_subject"
					]
				},
				"description": "Postman variables:\n\n  - {{ORG-AUTH}}: Should be set to the Organization's authentication key in order to be authenticated and authorized to access the Blocktopus REST APIs\n\nCreates a user in Blocktopus in order to be KYC'd. In the response body the created entity is returned, along with the pre-signed URLs that the images of the subject should be uploaded.\n\nParameter notes:\n\n  - organization_identifier is the ID that the Organization wants to use in order to identify the user resource in \n  - date_of_birth must be in YYYY-MM-DD format (i.e.1989-11-24)\n  - nationality must be a ISO_3166-1 alpha2 code\n  - id_scan_image_url must contain the file name of the image that has the user's ID document\n  - id_proof_image_url must contain the file name of the image that contains the selfie of the user holding his ID document\n  \nThe response body contains the AWS S3 presigned URls that the client needs to upload the documents to:\n\n  - id_scan_image_url\n  - id_proof_image_url\n  \nAfter creating the user, the ID document scan and the proof of ID need to be uploaded to the AWS S3 presigned URLs that the request body contains. Note that the time window that these two presigned URLs are valid is 900 seconds."
			},
			"response": []
		},
		{
			"name": "2. Submit review for individual subject",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-BLOCKTOPUS-AUTH",
						"type": "text",
						"value": "{{ORG-AUTH}}"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{BLOCKTOPUS_ROOT}}/api/v1/organizations/{{ORGANIZATION}}/individual_subject/{{INDIVIDUAL_ID}}/review",
					"host": [
						"{{BLOCKTOPUS_ROOT}}"
					],
					"path": [
						"api",
						"v1",
						"organizations",
						"{{ORGANIZATION}}",
						"individual_subject",
						"{{INDIVIDUAL_ID}}",
						"review"
					]
				},
				"description": "Postman variables:\n\n  - {{ORG-AUTH}}: Should be set to the Organization's authentication key in order to be authenticated and authorized to access the Blocktopus REST APIs\n\nAfter creating a user and uploading his documents to the S3 bucket, then the KYC review can be triggered by calling this API using the user's orgzanization identifier."
			},
			"response": []
		},
		{
			"name": "3. Get individual's KYC status",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-BLOCKTOPUS-AUTH",
						"value": "{{ORG-AUTH}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{BLOCKTOPUS_ROOT}}/api/v1/organizations/{{ORGANIZATION}}/individual_subject/{{INDIVIDUAL_ID}}/status",
					"host": [
						"{{BLOCKTOPUS_ROOT}}"
					],
					"path": [
						"api",
						"v1",
						"organizations",
						"{{ORGANIZATION}}",
						"individual_subject",
						"{{INDIVIDUAL_ID}}",
						"status"
					]
				},
				"description": "Postman variables:\n\n  - {{ORG-AUTH}}: Should be set to the Organization's authentication key in order to be authenticated and authorized to access the Blocktopus REST APIs\n\nGets the status of an individual user.\n\nResponse body contains a status property with the following values that describe the status of the user's KYC:\n\n  - docs_pending\n  - docs_submitted\n  - under_review\n  - declined\n  - approved"
			},
			"response": []
		},
		{
			"name": "4. Set organization identifier at user",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-BLOCKTOPUS-AUTH",
						"value": "{{ORG-AUTH}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"organization_identifier\": \"0x24be8052cdd0535fcd169c1263448a66acbf9ace\"\n}\n"
				},
				"url": {
					"raw": "{{BLOCKTOPUS_ROOT}}/api/v1/organizations/{{ORGANIZATION}}/individual_subject/{{INDIVIDUAL_ID}}/organization_identifier",
					"host": [
						"{{BLOCKTOPUS_ROOT}}"
					],
					"path": [
						"api",
						"v1",
						"organizations",
						"{{ORGANIZATION}}",
						"individual_subject",
						"{{INDIVIDUAL_ID}}",
						"organization_identifier"
					]
				}
			},
			"response": []
		},
		{
			"name": "5. Get user's KYC status using the Organization Identifier as the identifier",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-BLOCKTOPUS-AUTH",
						"value": "{{ORG-AUTH}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{BLOCKTOPUS_ROOT}}/api/v1/organizations/{{ORGANIZATION}}/individual_subject/organization_identifier/{{ORGANIZATION-IDENTIFIER}}/status",
					"host": [
						"{{BLOCKTOPUS_ROOT}}"
					],
					"path": [
						"api",
						"v1",
						"organizations",
						"{{ORGANIZATION}}",
						"individual_subject",
						"organization_identifier",
						"{{ORGANIZATION-IDENTIFIER}}",
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "1. Create company entity in Blocktopus",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-BLOCKTOPUS-AUTH",
						"value": "{{ORG-AUTH}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"administrator_first_name\": \"John\",\n\t\"administrator_last_name\": \"Smith\",\n\t\"name\": \"Contoso\",\n\t\"country_of_incorporation\": \"US\",\n\t\"address\": \"215 Roosevelt Ave, Carteret Apt. 777\",\n\t\"country_of_operation\": \"US\",\n\t\"city\": \"New York City\",\n\t\"state\": \"New York\",\n\t\"postcode\": \"NJ 07008\",\n\t\"registration_file\": \"contoso-registration.pdf\",\n    \"individual_parties\": [\n    {\n        \"first_name\": \"Alice\",\n        \"last_name\": \"Smith\",\n        \"nationality\": \"CA\",\n        \"residence\": \"US\",\n        \"gender\": \"Female\",\n        \"birthday\": \"2000-01-13\"\n    }\n    ],\n    \"entity_parties\": [\n        {\n            \"name\": \"Other Corp\",\n            \"country_of_incorporation\": \"US\",\n            \"country\": \"US\"\n        },\n        {\n            \"name\": \"Other Corp2\",\n            \"country_of_incorporation\": \"US\",\n            \"country\": \"US\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "{{BLOCKTOPUS_ROOT}}/api/v1/organizations/{{ORGANIZATION}}/corporate_subject",
					"host": [
						"{{BLOCKTOPUS_ROOT}}"
					],
					"path": [
						"api",
						"v1",
						"organizations",
						"{{ORGANIZATION}}",
						"corporate_subject"
					]
				},
				"description": "Postman variables:\n\n  - {{ORG-AUTH}}: Should be set to the Organization's authentication key in order to be authenticated and authorized to access the Blocktopus REST APIs\n\nCCreates a company entity in Blocktopus in order to be KYC'd. In the response body the created entity is returned, along with the pre-signed URL that REGISTRASTION document must be uploaded.\n\nParameter notes:\n\n  - nationality must be a ISO_3166-1 alpha2 code\n  - registration_file must contain the file name of the file that contains the company's registration document\n  \nThe response body contains the AWS S3 presigned URl that the client needs to upload the document to:\n\n  - registration_file\n\nAfter creating the company, the company's registration file needs to be uploaded to the AWS S3 presigned URLs that the request body contains. Note that the time window that these two presigned URLs are valid is 900 seconds."
			},
			"response": []
		},
		{
			"name": "2. Submit company for KYC review",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-BLOCKTOPUS-AUTH",
						"value": "{{ORG-AUTH}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{BLOCKTOPUS_ROOT}}/api/v1/organizations/{{ORGANIZATION}}/corporate_subject/{{CORPORATE_ID}}/review",
					"host": [
						"{{BLOCKTOPUS_ROOT}}"
					],
					"path": [
						"api",
						"v1",
						"organizations",
						"{{ORGANIZATION}}",
						"corporate_subject",
						"{{CORPORATE_ID}}",
						"review"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Get KYC status of corporate subject",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-BLOCKTOPUS-AUTH",
						"value": "{{ORG-AUTH}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{BLOCKTOPUS_ROOT}}/api/v1/organizations/{{ORGANIZATION}}/corporate_subject/{{CORPORATE_ID}}/status",
					"host": [
						"{{BLOCKTOPUS_ROOT}}"
					],
					"path": [
						"api",
						"v1",
						"organizations",
						"{{ORGANIZATION}}",
						"corporate_subject",
						"{{CORPORATE_ID}}",
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "4. Set Organization ID to a corporate subject",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-BLOCKTOPUS-AUTH",
						"value": "{{ORG-AUTH}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"organization_identifier\": \"0x24be8052cdd0535fcd169c1263448a66acbf9ac3\"\n}\n"
				},
				"url": {
					"raw": "{{BLOCKTOPUS_ROOT}}/api/v1/organizations/{{ORGANIZATION}}/corporate_subject/{{CORPORATE_ID}}/organization_identifier",
					"host": [
						"{{BLOCKTOPUS_ROOT}}"
					],
					"path": [
						"api",
						"v1",
						"organizations",
						"{{ORGANIZATION}}",
						"corporate_subject",
						"{{CORPORATE_ID}}",
						"organization_identifier"
					]
				}
			},
			"response": []
		},
		{
			"name": "5. Get KYC status of a corporate subject using its attached organizational ID",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-BLOCKTOPUS-AUTH",
						"value": "{{ORG-AUTH}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{BLOCKTOPUS_ROOT}}/api/v1/organizations/{{ORGANIZATION}}/corporate_subject/organization_identifier/{{ORGANIZATIONAL_ID}}/status",
					"host": [
						"{{BLOCKTOPUS_ROOT}}"
					],
					"path": [
						"api",
						"v1",
						"organizations",
						"{{ORGANIZATION}}",
						"corporate_subject",
						"organization_identifier",
						"{{ORGANIZATIONAL_ID}}",
						"status"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "20c645ee-d223-4cc8-82f1-caa2cfac815c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "89238bd2-2861-4bcc-ba02-b7b73555382d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}